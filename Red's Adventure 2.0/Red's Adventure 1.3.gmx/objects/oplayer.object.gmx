<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>splayereast</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
collidenearboss=false;


pushvalue=10;

combo=0;
combodelay=false;

scoreloss=100;
attackspeed=0.75;
attackdelay=30;
attackdelaymax=30;
moveanimationspeed=0.2;
invulnerabletimer=0;
invulnerabletimermax=90;
way=true;
grav = 1;
hsp = 0;
vsp = 0;
jumpspeed = 20;
movespeed = 5;

wallcooldown=false;

vjump=0;
vjumpmax=5;
hjump=0;
hjumpmax=4;

image_speed=moveanimationspeed;
globalvar knockback;
knockback=false;
globalvar invulnerable;
invulnerable=false;
globalvar attackdone;
attackdone=false;
globalvar attack;
attack=false;

sparknumber=1;

swordspark=part_system_create();
spark=part_type_create();
sparkemitter=part_emitter_create(swordspark);

part_type_life(spark,60,120);
part_type_color1(swordspark,c_white);
part_type_direction(swordspark,0,180,0,0.5);
part_type_speed(swordspark,0.5,3,-0.03,0.1);


heartlost=part_system_create();
heartspark=part_type_create();
heartemitter=part_emitter_create(heartlost);
    
part_type_life(heartspark,60,90);
part_type_direction(heartspark,0,360,0,0.1);
part_type_speed(heartspark,1,4,0,0.1);
part_type_color1(heartlost,c_red);

heartnumber=140;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>collidenearboss=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>knockback=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(part_emitter_exists(swordspark,sparkemitter)) part_emitter_destroy(swordspark,sparkemitter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wallcooldown=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(combo!=0)
{
attackdelay=30;
combo=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>combodelay=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>oplayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(playerhp&lt;1)
{
    if(instance_exists(onatureworld))
    {
        part_emitter_destroy(onatureworld.naturesystem,onatureworld.natureemitter);
    }
    room_restart();
    playerhp=maxhearts;
    playerscore-=1000;
}


if(!knockback)
{
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_up);
}

move = key_left + key_right;
hsp = move * movespeed;
if (vsp &lt; 26) vsp += grav;
if(speed&gt;0)speed-=0.05;
if(speed&lt;0)speed=0;
 
if(vjump&gt;0)vjump=0;
if(vjump&lt;0)vjump+=0.05;
if(hjump&gt;0)hjump-=0.1;
if(hjump&lt;0)hjump+=0.1;

if(keyboard_check_pressed(vk_up)&amp;&amp;place_meeting(x,y+10,owall))
{
    sound_volume(soundjump1,0.2);
    audio_play_sound(soundjump1,0,false);
}

//jump
if (place_meeting(x,y+1,owall))
{
    vsp = key_jump * -jumpspeed;
}

//horizontal wall collision
if (place_meeting(x+hsp,y,owall))
{
    while(!place_meeting(x+sign(hsp),y,owall))
    {
        x = x+sign(hsp);
    }
    hsp = 0;
    hjump=0;
}
x += hsp+hjump;

//vertical wall collision
if (!knockback&amp;&amp;place_meeting(x,y+vsp,owall))
{
    while(!place_meeting(x,y+sign(vsp),owall))
    {
        y = y+sign(vsp);
    }
    speed=0;
    vjump=0;
    hjump=0;
    knockback=false;
    vsp = 0;
}
y += vsp+vjump;




//direction 
if(hsp&gt;0)way=true;
if(hsp&lt;0)way=false;


//animation decision
if(!way&amp;&amp;attack==false)
{
    if(place_meeting(x,y+10,owall)&amp;&amp;hsp=0)sprite_index=splayerwest;
    if(place_meeting(x,y+10,owall)&amp;&amp;hsp&lt;0)sprite_index=splayerrunwest;
    if(vsp&lt;0) sprite_index=splayerjumpwest;
    if(vsp&gt;0) sprite_index=splayerfallwest;
}
if(way&amp;&amp;attack==false)
{
    if(place_meeting(x,y+10,owall)&amp;&amp;hsp=0)sprite_index=splayereast;
    if(place_meeting(x,y+10,owall)&amp;&amp;hsp&gt;0)sprite_index=splayerruneast;
    if(vsp&lt;0) sprite_index=splayerjumpeast; 
    if(vsp&gt;0) sprite_index=splayerfalleast;
}

//attack ability
if (!combodelay&amp;&amp;attackdelay==attackdelaymax&amp;&amp;!attack&amp;&amp;keyboard_check(ord('Q'))&amp;&amp;way)
{
    image_speed=attackspeed;
    sprite_index=splayerswordeast
    instance_create(x+60,y+22,oswordtemp);
    attackdone=false;
    attack=true;
}    

if (!combodelay&amp;&amp;attackdelay==attackdelaymax&amp;&amp;!attack&amp;&amp;keyboard_check(ord('Q'))&amp;&amp;!way)
{
    image_speed=attackspeed;
    sprite_index = splayerswordwest
    instance_create(x+10,y+22,oswordtemp);
    attackdone=false;
    attack=true;

}
if(attackdelay!=attackdelaymax)attackdelay++;

//create indestructible wall ability
/*
if(way&amp;&amp;!wallcooldown&amp;&amp;keyboard_check(ord('W')))
{
    instance_create(x+80,y+64,oplayerwall);
    alarm[2]=300;
    wallcooldown=true;
}
if(!way&amp;&amp;!wallcooldown&amp;&amp;keyboard_check(ord('W')))
{
    instance_create(x+50,y+64,oplayerwall);
    alarm[2]=300;
    wallcooldown=true;
}
*/


//short invincibility period after being hit
if(invulnerable)
{
    if(invulnerabletimer==invulnerabletimermax)
    {
    invulnerable=false;
    invulnerabletimer=0;
    }
    else invulnerabletimer++;
}
//restart
if(keyboard_check_released(ord('P')))
{
    if(instance_exists(onatureworld))
    {
        part_emitter_destroy(onatureworld.naturesystem,onatureworld.natureemitter);
    }
    room_restart();
    playerhp=maxhearts;
    playerscore-=1000;
}




//sword sparks
if(!attack)
{
    if(hsp!=0&amp;&amp;way&amp;&amp;(position_meeting(x+18,y+98,owall)||position_meeting(x+22,y+98,owall)))
    {
        part_emitter_region(swordspark,sparkemitter,x+18,x+22,y+96,y+96,ef_spark,ps_distr_linear)
        part_emitter_burst(swordspark,sparkemitter,spark,sparknumber);
        //alarm[3]=1;
    }
    
    
    if(hsp!=0&amp;&amp;!way&amp;&amp;(position_meeting(x+104,y+98,owall)||position_meeting(x+108,y+98,owall)))
    {
        part_emitter_region(swordspark,sparkemitter,x+104,x+108,y+96,y+96,ef_spark,ps_distr_linear)
        part_emitter_burst(swordspark,sparkemitter,spark,sparknumber);
        //alarm[3]=1;
    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obossradius">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!collidenearboss&amp;&amp;!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obossball3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!invulnerable&amp;&amp;other.reflect==false)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obossball2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!invulnerable&amp;&amp;other.reflect==false)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obossball1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!invulnerable&amp;&amp;other.reflect==false)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oboss">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1&amp;&amp;vjump&gt;-vjumpmax)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1&amp;&amp;vjump&gt;-vjumpmax)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oflyerbullet3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oflyerbullet2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oflyerbullet1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oflyer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oenemyrunner">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oenemyleap">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oballbasicright">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!other.reflected&amp;&amp;!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alreadyhit=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oballbasicleft">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!other.reflected&amp;&amp;!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    other.alreadyhit=true;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oenemybasic">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!invulnerable)
{
    part_emitter_region(heartlost,heartemitter,x+62,x+62,y+70,y+70,ef_spark,ps_distr_linear);
    part_emitter_burst(heartlost,heartemitter,heartspark,heartnumber);
    playerhp-=1;
    playerscore-=scoreloss;
    invulnerable=true;
    knockback=true;
    alarm[4]=1;
    if(other.x&gt;x+62)
    {
        hjump=-hjumpmax;
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
    if(other.x&lt;x+62)
    {
        hjump=hjumpmax
        if(vsp&gt;-1)vjump=-vjumpmax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index==splayerswordeast)
{
    image_speed=moveanimationspeed;
    attackdone=true;
    attack=false;
    //if(hsp!=0)sprite_index=splayerruneast;
    //else sprite_index=splayereast;
    attackdelay=0;
}
if(sprite_index==splayerswordwest)
{
    image_speed=moveanimationspeed;
    attackdone=true;
    attack=false;
    //if(hsp!=0)sprite_index=splayerrunwest;
    //else sprite_index=splayerwest;
    attackdelay=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
