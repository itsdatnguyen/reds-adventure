<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sdragonball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reflect=false;

reflectnumber=80;
reflectsystem=part_system_create();
reflectpart=part_type_create();
reflectemitter=part_emitter_create(reflectsystem);

part_type_direction(reflectsystem,0,360,2,0.2);
part_type_life(reflectpart,60,120);
part_type_color1(reflectsystem,c_aqua);
part_type_speed(reflectsystem,1,8,0.01,0.1);


if(instance_exists(oplayer))
{
    playerrealx=oplayer.x+64;
    playerrealy=oplayer.y+64;
    
    xlength=playerrealx-x;
    ylength=playerrealy-y;
    if(xlength!=0)tempangle=(arctan(ylength/xlength));
    

    speed=10;
    
    if(playerrealx&gt;x&amp;&amp;y&gt;playerrealy)
    {
        direction=-(tempangle*(180/pi));
        image_angle=direction+90;
    }
    if(x&gt;playerrealx&amp;&amp;y&gt;playerrealy)
    {
        direction=180-(tempangle*(180/pi));
        image_angle=direction+90;
    }
    if(x&gt;playerrealx&amp;&amp;playerrealy&gt;y)
    {
        direction=180-(tempangle*(180/pi));
        image_angle=direction+90;
    }
    if(playerrealx&gt;x&amp;&amp;playerrealy&gt;y)
    {
        direction=360-(tempangle*(180/pi));
        image_angle=direction+90;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oboss">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(reflect)instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oswordtemp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!reflect)
{
    speed+=4;
    //direction+=round(random(90))+135;
    reflect=true;
    image_blend=c_blue;
    //PARTICLES
    part_emitter_region(reflectsystem,reflectemitter,x,x,y,y,ef_spark,ps_distr_linear);
    part_emitter_burst(reflectsystem,reflectemitter,reflectpart,reflectnumber);
    //direction reflect code
    playerrealx=oplayer.x+64;
    playerrealy=oplayer.y+64;
    
    xlength=playerrealx-x;
    ylength=playerrealy-y;
    if(xlength!=0)tempangle=(arctan(ylength/xlength));
    
    
    if(playerrealx&gt;x&amp;&amp;y&gt;playerrealy)
    {
        direction=-(tempangle*(180/pi))+180;
    }
    if(x&gt;playerrealx&amp;&amp;y&gt;playerrealy)
    {
        direction=180-(tempangle*(180/pi))+180;
    }
    if(x&gt;playerrealx&amp;&amp;playerrealy&gt;y)
    {
        direction=180-(tempangle*(180/pi))+180;
    }
    if(playerrealx&gt;x&amp;&amp;playerrealy&gt;y)
    {
        direction=360-(tempangle*(180/pi))+180;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
